/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { SushiBar, SushiBarInterface } from "../../contracts/SushiBar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_sushi",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_days",
        type: "uint256",
      },
    ],
    name: "checkForStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "data",
    outputs: [
      {
        internalType: "uint256",
        name: "timestacked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "leave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolData",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referTo",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseMyReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "staked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sushi",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b3a38038062002b3a83398181016040528101906200003791906200018f565b6040518060400160405280600881526020017f53757368694261720000000000000000000000000000000000000000000000008152506040518060400160405280600681526020017f78535553484900000000000000000000000000000000000000000000000000008152508160039081620000b491906200043b565b508060049081620000c691906200043b565b50505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000522565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001438262000116565b9050919050565b6000620001578262000136565b9050919050565b62000169816200014a565b81146200017557600080fd5b50565b60008151905062000189816200015e565b92915050565b600060208284031215620001a857620001a762000111565b5b6000620001b88482850162000178565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200024357607f821691505b602082108103620002595762000258620001fb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000284565b620002cf868362000284565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200031c620003166200031084620002e7565b620002f1565b620002e7565b9050919050565b6000819050919050565b6200033883620002fb565b62000350620003478262000323565b84845462000291565b825550505050565b600090565b6200036762000358565b620003748184846200032d565b505050565b5b818110156200039c57620003906000826200035d565b6001810190506200037a565b5050565b601f821115620003eb57620003b5816200025f565b620003c08462000274565b81016020851015620003d0578190505b620003e8620003df8562000274565b83018262000379565b50505b505050565b600082821c905092915050565b60006200041060001984600802620003f0565b1980831691505092915050565b60006200042b8383620003fd565b9150826002028217905092915050565b6200044682620001c1565b67ffffffffffffffff811115620004625762000461620001cc565b5b6200046e82546200022a565b6200047b828285620003a0565b600060209050601f831160018114620004b357600084156200049e578287015190505b620004aa85826200041d565b8655506200051a565b601f198416620004c3866200025f565b60005b82811015620004ed57848901518255600182019150602085019450602081019050620004c6565b868310156200050d578489015162000509601f891682620003fd565b8355505b6001600288020188555050505b505050505050565b61260880620005326000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a59f3e0c11610071578063a59f3e0c14610347578063a9059cbb14610363578063b90d3d0c14610393578063d66d9e19146103c5578063dd62ed3e146103cf57610121565b806370a082311461028f5780638823b385146102bf57806395d89b41146102c957806398807d84146102e7578063a457c2d71461031757610121565b806318160ddd116100f457806318160ddd146101c357806323b872dd146101e1578063313ce56714610211578063395093511461022f57806368552d231461025f57610121565b806306fdde0314610126578063095ea7b3146101445780630a08790314610174578063136efb7a14610192575b600080fd5b61012e6103ff565b60405161013b919061195b565b60405180910390f35b61015e60048036038101906101599190611a16565b610491565b60405161016b9190611a71565b60405180910390f35b61017c6104b4565b6040516101899190611aeb565b60405180910390f35b6101ac60048036038101906101a79190611b06565b6104da565b6040516101ba929190611b51565b60405180910390f35b6101cb61051e565b6040516101d89190611b7a565b60405180910390f35b6101fb60048036038101906101f69190611b95565b610528565b6040516102089190611a71565b60405180910390f35b610219610557565b6040516102269190611c04565b60405180910390f35b61024960048036038101906102449190611a16565b610560565b6040516102569190611a71565b60405180910390f35b61027960048036038101906102749190611c1f565b610597565b6040516102869190611b7a565b60405180910390f35b6102a960048036038101906102a49190611b06565b6105ef565b6040516102b69190611b7a565b60405180910390f35b6102c7610637565b005b6102d1610823565b6040516102de919061195b565b60405180910390f35b61030160048036038101906102fc9190611b06565b6108b5565b60405161030e9190611b7a565b60405180910390f35b610331600480360381019061032c9190611a16565b610901565b60405161033e9190611a71565b60405180910390f35b610361600480360381019061035c9190611c1f565b610978565b005b61037d60048036038101906103789190611a16565b610c73565b60405161038a9190611a71565b60405180910390f35b6103ad60048036038101906103a89190611b06565b610c96565b6040516103bc93929190611c4c565b60405180910390f35b6103cd610ce0565b005b6103e960048036038101906103e49190611c83565b611195565b6040516103f69190611b7a565b60405180910390f35b60606003805461040e90611cf2565b80601f016020809104026020016040519081016040528092919081815260200182805461043a90611cf2565b80156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b5050505050905090565b60008061049c61121c565b90506104a9818585611224565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000600254905090565b60008061053361121c565b90506105408582856113ed565b61054b858585611479565b60019150509392505050565b60006012905090565b60008061056b61121c565b905061058c81858561057d8589611195565b6105879190611d52565b611224565b600191505092915050565b600080600283116105ab57600090506105e6565b600483116105bc57601990506105e5565b600683116105cd57603290506105e4565b600883116105de57604b90506105e3565b606490505b5b5b5b80915050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff90611dd2565b60405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001540361078d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078490611e3e565b60405180910390fd5b6107d933600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546116f8565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b60606004805461083290611cf2565b80601f016020809104026020016040519081016040528092919081815260200182805461085e90611cf2565b80156108ab5780601f10610880576101008083540402835291602001916108ab565b820191906000526020600020905b81548152906001019060200180831161088e57829003601f168201915b5050505050905090565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60008061090c61121c565b9050600061091a8286611195565b90508381101561095f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095690611ed0565b60405180910390fd5b61096c8286868403611224565b60019250505092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109d59190611ef0565b602060405180830381865afa1580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190611f20565b90506000610a2261051e565b90506000811480610a335750600082145b15610a4757610a4233846116f8565b610a7c565b6000610a6e83610a60848761185790919063ffffffff16565b61186d90919063ffffffff16565b9050610a7a33826116f8565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610adb93929190611f4d565b6020604051808303816000875af1158015610afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1e9190611fb0565b5060405180606001604052804281526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505033600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600080610c7e61121c565b9050610c8b818585611479565b600191505092915050565b60066020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600073ffffffffffffffffffffffffffffffffffffffff16600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610db1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da890612029565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015403610e36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2d90612095565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060004290506000610e8e8383611883565b90506000610e9b82610597565b905060008111610ee0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed790612101565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000610f4f83610f4160648561186d90919063ffffffff16565b61185790919063ffffffff16565b905060008183610f5f9190612121565b90506008851115611004576002600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154610fb99190612184565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550611099565b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546110529190611d52565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016110f69291906121b5565b6020604051808303816000875af1158015611115573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111399190611fb0565b5081836111469190612121565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128a90612250565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611302576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f9906122e2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516113e09190611b7a565b60405180910390a3505050565b60006113f98484611195565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114735781811015611465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145c9061234e565b60405180910390fd5b6114728484848403611224565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114df906123e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154e90612472565b60405180910390fd5b6115628383836118c1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156115e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115df90612504565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461167b9190611d52565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516116df9190611b7a565b60405180910390a36116f28484846118c6565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175e90612570565b60405180910390fd5b611773600083836118c1565b80600260008282546117859190611d52565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117da9190611d52565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161183f9190611b7a565b60405180910390a3611853600083836118c6565b5050565b600081836118659190612590565b905092915050565b6000818361187b9190612184565b905092915050565b6000806018603c8086866118979190612121565b6118a19190612184565b6118ab9190612184565b6118b59190612184565b90508091505092915050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119055780820151818401526020810190506118ea565b60008484015250505050565b6000601f19601f8301169050919050565b600061192d826118cb565b61193781856118d6565b93506119478185602086016118e7565b61195081611911565b840191505092915050565b600060208201905081810360008301526119758184611922565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119ad82611982565b9050919050565b6119bd816119a2565b81146119c857600080fd5b50565b6000813590506119da816119b4565b92915050565b6000819050919050565b6119f3816119e0565b81146119fe57600080fd5b50565b600081359050611a10816119ea565b92915050565b60008060408385031215611a2d57611a2c61197d565b5b6000611a3b858286016119cb565b9250506020611a4c85828601611a01565b9150509250929050565b60008115159050919050565b611a6b81611a56565b82525050565b6000602082019050611a866000830184611a62565b92915050565b6000819050919050565b6000611ab1611aac611aa784611982565b611a8c565b611982565b9050919050565b6000611ac382611a96565b9050919050565b6000611ad582611ab8565b9050919050565b611ae581611aca565b82525050565b6000602082019050611b006000830184611adc565b92915050565b600060208284031215611b1c57611b1b61197d565b5b6000611b2a848285016119cb565b91505092915050565b611b3c816119e0565b82525050565b611b4b816119a2565b82525050565b6000604082019050611b666000830185611b33565b611b736020830184611b42565b9392505050565b6000602082019050611b8f6000830184611b33565b92915050565b600080600060608486031215611bae57611bad61197d565b5b6000611bbc868287016119cb565b9350506020611bcd868287016119cb565b9250506040611bde86828701611a01565b9150509250925092565b600060ff82169050919050565b611bfe81611be8565b82525050565b6000602082019050611c196000830184611bf5565b92915050565b600060208284031215611c3557611c3461197d565b5b6000611c4384828501611a01565b91505092915050565b6000606082019050611c616000830186611b33565b611c6e6020830185611b33565b611c7b6040830184611b42565b949350505050565b60008060408385031215611c9a57611c9961197d565b5b6000611ca8858286016119cb565b9250506020611cb9858286016119cb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d0a57607f821691505b602082108103611d1d57611d1c611cc3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d5d826119e0565b9150611d68836119e0565b9250828201905080821115611d8057611d7f611d23565b5b92915050565b7f4e6f7420617574686f7269736564000000000000000000000000000000000000600082015250565b6000611dbc600e836118d6565b9150611dc782611d86565b602082019050919050565b60006020820190508181036000830152611deb81611daf565b9050919050565b7f4e6f20416d6f756e74204c656674000000000000000000000000000000000000600082015250565b6000611e28600e836118d6565b9150611e3382611df2565b602082019050919050565b60006020820190508181036000830152611e5781611e1b565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611eba6025836118d6565b9150611ec582611e5e565b604082019050919050565b60006020820190508181036000830152611ee981611ead565b9050919050565b6000602082019050611f056000830184611b42565b92915050565b600081519050611f1a816119ea565b92915050565b600060208284031215611f3657611f3561197d565b5b6000611f4484828501611f0b565b91505092915050565b6000606082019050611f626000830186611b42565b611f6f6020830185611b42565b611f7c6040830184611b33565b949350505050565b611f8d81611a56565b8114611f9857600080fd5b50565b600081519050611faa81611f84565b92915050565b600060208284031215611fc657611fc561197d565b5b6000611fd484828501611f9b565b91505092915050565b7f4e6f7420617574686f726973656420746f206c65617665000000000000000000600082015250565b60006120136017836118d6565b915061201e82611fdd565b602082019050919050565b6000602082019050818103600083015261204281612006565b9050919050565b7f4e6f20416d6f756e74205374616b656400000000000000000000000000000000600082015250565b600061207f6010836118d6565b915061208a82612049565b602082019050919050565b600060208201905081810360008301526120ae81612072565b9050919050565b7f416d6f756e74206973206c6f636b656400000000000000000000000000000000600082015250565b60006120eb6010836118d6565b91506120f6826120b5565b602082019050919050565b6000602082019050818103600083015261211a816120de565b9050919050565b600061212c826119e0565b9150612137836119e0565b925082820390508181111561214f5761214e611d23565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061218f826119e0565b915061219a836119e0565b9250826121aa576121a9612155565b5b828204905092915050565b60006040820190506121ca6000830185611b42565b6121d76020830184611b33565b9392505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061223a6024836118d6565b9150612245826121de565b604082019050919050565b600060208201905081810360008301526122698161222d565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006122cc6022836118d6565b91506122d782612270565b604082019050919050565b600060208201905081810360008301526122fb816122bf565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612338601d836118d6565b915061234382612302565b602082019050919050565b600060208201905081810360008301526123678161232b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006123ca6025836118d6565b91506123d58261236e565b604082019050919050565b600060208201905081810360008301526123f9816123bd565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061245c6023836118d6565b915061246782612400565b604082019050919050565b6000602082019050818103600083015261248b8161244f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006124ee6026836118d6565b91506124f982612492565b604082019050919050565b6000602082019050818103600083015261251d816124e1565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061255a601f836118d6565b915061256582612524565b602082019050919050565b600060208201905081810360008301526125898161254d565b9050919050565b600061259b826119e0565b91506125a6836119e0565b92508282026125b4816119e0565b915082820484148315176125cb576125ca611d23565b5b509291505056fea26469706673582212207498effc88d899275044d1ed8adf28a76375a7e76071cec66bffededfab21eaf64736f6c63430008110033";

type SushiBarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SushiBarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SushiBar__factory extends ContractFactory {
  constructor(...args: SushiBarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _sushi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SushiBar> {
    return super.deploy(_sushi, overrides || {}) as Promise<SushiBar>;
  }
  override getDeployTransaction(
    _sushi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sushi, overrides || {});
  }
  override attach(address: string): SushiBar {
    return super.attach(address) as SushiBar;
  }
  override connect(signer: Signer): SushiBar__factory {
    return super.connect(signer) as SushiBar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SushiBarInterface {
    return new utils.Interface(_abi) as SushiBarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SushiBar {
    return new Contract(address, _abi, signerOrProvider) as SushiBar;
  }
}
